#!/usr/bin/env bash

# General
alias python=ipython3
alias unzip='unzip -q'
alias sizes='find . -mindepth 1 -maxdepth 1|xargs du -hsc |sort -hr'
alias open='open_command'
alias o='exit'
alias tm='gio trash'
alias mntjet='sshfs nvidia@tx2_rv:/home/nvidia/ /home/seth/kbcar_home'
alias umntjet='fusermount -u /home/seth/kbcar_home'
lsg() {
  ls | grep $1
}
llg() {
  ll | grep $1
}

# Move/Copy and follow
goto() { [ -d "$1" ] && cd "$1" || cd "$(dirname "$1")"; }
cpf() { cp "$@" && goto "$_"; }
mvf() { mv "$@" && goto "$_"; }

# ROS / sourcing
alias ros_env='env | grep ROS'
alias szsh='source ~/.zshrc'
alias sdevel='source devel/setup.zsh'

# Catkin
alias catkin_make_cuda='catkin_make -DOpenCV_DIR=/usr/local/share/OpenCV -DVISUAL_MTT_CUDA=ON'
alias catkin_make_py3='catkin_make -DPYTHON_EXECUTABLE=/home/seth/.virtualenvs/default/bin/python3'
alias catkin_make_py3_debug='catkin_make_py3 -DCMAKE_BUILD_TYPE=Debug'

# Handy code-related aliases
alias qt='~/dev/Qt/Tools/QtCreator/bin/qtcreator'
alias qtb='qt ~/dev/boat_landing_sim/src/CMakeLists.txt'
alias rf_holodeck='roslaunch rosflight_holodeck rf_holodeck.launch'
alias rf_holodeck_debug='roslaunch rosflight_holodeck rf_holodeck_debug.launch'
alias rf_holodeck_solo='roslaunch rosflight_holodeck rf_holodeck_solo.launch'
alias rfh="cd ~/dev/boat_landing_sim/src/rosflight_holodeck"
alias serv_call='rosservice call /param_set MIXER 2 && rosservice call /calibrate_imu'
alias atmb='atom ~/dev/boat_landing_sim'
alias atmf='atom ~/school/flight_dynamics/mavsim_python'
alias atmr='atom ~/school/robotic_vision'
alias cdb='code ~/dev/boat_landing_sim'
alias cdf='code ~/school/flight_dynamics/mavsim_python'
alias cdr='code ~/school/robotic_vision'
alias opencv-docs='google-chrome ~/Documents/opencv-docs-4.0.1/pages.html'
alias cdbmav='code ~/school/flight_dynamics/bmav'
alias cdmmav='code ~/school/flight_dynamics/mmav'

# FFMPEG converting MP4 or MOV to MOV for Resolve video editor
ffmpeg_conv_resolve() {
  if [[ "$#" -ne 1 ]]; then
    echo "Usage: $0 [dir]"
  elif ! [[ -e $1 ]]; then
    echo "$1 does not exist"
  else
    if [[ -d $1 ]]; then
      if [[ "${1: -1}" == "/" ]]; then
        FILES=${1}*
      else
        FILES=${1}/*
      fi
      CONV_DIR=${FILES:0:-2}/converted_resolve
      if [[ -e $CONV_DIR ]]; then
        echo "Error: directory for converted files already exists!"
        return 1
      fi
      mkdir $CONV_DIR
      for f in $~FILES; do
        echo "\n\n ------- Converting file $f -------\n\n"
        if [[ -f $f ]]; then
          fname=${f:2:-4}
          ffmpeg -i ${f} -vcodec dnxhd -acodec pcm_s16le -s 1920x1080 -r 30000/1001 \
                                        -b:v 45M -pix_fmt yuv422p -f mov "${CONV_DIR}/${fname}_R.MOV"
        fi
      done
    fi
  fi
}
ffmpeg_resolve_to_mp4() {
  if [[ "$#" -ne 1 ]]; then
    echo "Usage: $0 [infile.mov]"
  elif ! [[ -e $1 ]]; then
    echo "$1 does not exist"
  else
    fname=${${1:0:-4}}
    ffmpeg -i ${1} -vf yadif -codec:v libx264 -crf 1 -bf 2 -flags +cgop -pix_fmt yuv420p -codec:a aac -strict -2 -b:a 384k -r:a 48000 -movflags faststart ${fname}.MP4
  fi
}

# git
alias gs='git status'
alias gch='git checkout'
alias gcm='git commit -m'
alias subup='git submodule update --init --recursive'

pull_changes() {
  A=$(pwd)
  cd ~/env
  git pull
  cd ~/school/flight_dynamics
  git pull
  cd .. 
  git pull
  cd $A
  echo "\nschool and env repos have been updated on this machine.\n"
}
push_changes() {
  A=$(pwd)
  echo "\n--ENV--"
  cd ~/env
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n--flight_dyanamics--"
  cd ~/school/flight_dynamics/
  git add -A
  git commit -m "Auto-pushed changes"
  git push -u origin master
  cd ..
  echo "\n--SCHOOL--"
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n"
  cd $A
}
gstats() {
  A=$(pwd)
  echo "\n--ENV--"
  cd ~/env
  git status -s
  echo "--SCHOOL--"
  cd ~/school
  git status -s
  cd ~/school/flight_dynamics
  echo "  --flight_dynamics--"
  git status -s
  cd $A
}
boat_pull() {
  A=$(pwd)
  cd ~/dev/boat_landing_sim/src/rosflight_holodeck
  git pull
  cd ../ROSFLIGHT_fork
  git pull
  cd ../rf_joy 
  git pull
  cd ../../holodeck
  git pull
  cd ..
  git pull
  cd $A
  echo "\nboat_landing_sim repo has been updated on this machine.\n"
}


source ~/.other

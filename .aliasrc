#!/usr/bin/env bash 

# General
alias ipy='ipython3'
alias htop='htop -u seth'
alias unzip='unzip -q'
alias open='open_command'
alias upgrades='sudo apt update && sudo apt upgrade -y'
alias o='exit'
alias tm='gio trash'
alias mntjet='sshfs nvidia@tx2_rv:/home/nvidia/ /home/seth/kbcar_home'
alias umntjet='fusermount -u /home/seth/kbcar_home'
alias ue4='~/dev/UnrealEngine/Engine/Binaries/Linux/UE4Editor'
alias scaedm='ssh smn45@ssh.et.byu.edu'
alias nuke='pkill -SIGKILL -fe '
alias lsblk_='lsblk |grep -v loop'
alias kill_holodeck='killall Holodeck && killall Holodeck'
alias explode='rm -rf build devel && catkin_make_py3_debug'
alias msger='fb-messenger-cli'
upload_gdrive() { # upload file to Sync dir on Google Drive
   gdrive upload -p 0B0rj1VEWGIltcmJ1UGNIQTVfTmc $1
}
lg() {
  la | grep $1
}
lsg() {
  ls | grep $1
}
sizes() {
    find . -mindepth 1 -maxdepth 1 -print0|xargs -0 du -hsc |sort -hr
}
alias watch='watch -n 0.2 '
power_draw() {
    echo - | awk "{printf \"%.1f\", \
      $(( $(cat /sys/class/power_supply/BAT0/current_now) * \
          $(cat /sys/class/power_supply/BAT0/voltage_now) )) / 1000000000000 }" ; echo " W "
}

# Move/Copy and follow
goto() { [ -d "$1" ] && cd "$1" || cd "$(dirname "$1")"; }
cpf() { cp "$@" && goto "$_"; }
mvf() { mv "$@" && goto "$_"; }

# ROS / sourcing
alias ros_env='env | grep ROS'
alias szsh='source ~/.zshrc'
alias sdevel='source devel/setup.zsh'

# Catkin
alias catkin_make_cuda='catkin_make -DOpenCV_DIR=/usr/local/share/OpenCV -DVISUAL_MTT_CUDA=ON'
alias catkin_make_py3='catkin_make -DPYTHON_EXECUTABLE=/home/seth/.virtualenvs/default/bin/python3'
alias catkin_make_py3_debug='catkin_make_py3 -DCMAKE_BUILD_TYPE=Debug'

# Handy code-related aliases
alias opencv-docs='google-chrome ~/Documents/opencv-docs-4.0.1/pages.html'
alias rf_holodeck='roslaunch rosflight_holodeck roscopter.launch'
alias rf_holodeck_debug='roslaunch rosflight_holodeck debug.launch'
alias serv_call='rosservice call /param_set MIXER 2 && rosservice call /calibrate_imu'
alias cdb='code ~/dev/boat_landing_sim'
alias cdd='code ~/school/deep_learning'
alias cda='code ~/school/autonomous_systems'

# Common directories
alias cd_rfh='cd ~/dev/boat_landing_sim/src/rosflight_holodeck'
alias cd_boat='cd ~/dev/boat_landing_sim'
alias cd_holodeck='cd ~/dev/boat_landing_sim/src/rosflight_holodeck/python/holodeck'
alias cd_deep='cd ~/school/deep_learning/lab1'

# FFMPEG converting MP4 or MOV to MOV for Resolve video editor
ffmpeg_conv_resolve() {
  if [[ "$#" -ne 1 ]]; then
    echo "Usage: $0 [dir]"
  elif ! [[ -e $1 ]]; then
    echo "$1 does not exist"
  else
    if [[ -d $1 ]]; then
      if [[ "${1: -1}" == "/" ]]; then
        FILES=${1}*
      else
        FILES=${1}/*
      fi
      CONV_DIR=${FILES:0:-2}/converted_resolve
      if [[ -e $CONV_DIR ]]; then
        echo "Error: directory for converted files already exists!"
        return 1
      fi
      mkdir $CONV_DIR
      for f in $~FILES; do
        echo "\n\n ------- Converting file $f -------\n\n"
        if [[ -f $f ]]; then
          fname=${f:2:-4}
          ffmpeg -i ${f} -vcodec dnxhd -acodec pcm_s16le -s 1920x1080 -r 30000/1001 \
                                        -b:v 45M -pix_fmt yuv422p -f mov "${CONV_DIR}/${fname}_R.MOV"
        fi
      done
    fi
  fi
}
ffmpeg_resolve_to_mp4() {
  if [[ "$#" -ne 1 ]]; then
    echo "Usage: $0 [infile.mov]"
  elif ! [[ -e $1 ]]; then
    echo "$1 does not exist"
  else
    fname=${${1:0:-4}}
    ffmpeg -i ${1} -vf yadif -codec:v libx264 -crf 1 -bf 2 -flags +cgop -pix_fmt yuv420p -codec:a aac -strict -2 -b:a 384k -r:a 48000 -movflags faststart ${fname}.MP4
  fi
}

# git
alias gs='git status'
alias gch='git checkout'
alias gcm='git commit -m'
alias subup='git submodule update --init --recursive'

dir1=~/env
dir2=~/school/deep_learning
dir3=~/school
dir4=~/notes

pull_changes() {
  A=$(pwd)
  cd $dir1 
  git pull
  cd $dir2 
  git pull
  cd $dir3 
  git pull
  cd $dir4
  git pull
  cd $A
  echo "\npersonal repos have been updated on this machine.\n"
}
push_changes() {
  A=$(pwd)
  echo "\n--ENV--"
  cd $dir1
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n-- deep_learning --"
  cd $dir2
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n--SCHOOL--"
  cd $dir3
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n--NOTES--"
  cd $dir4
  git add -A
  git commit -m "Auto-pushed changes"
  git push
  echo "\n"
  cd $A
}
gstats() {
  A=$(pwd)
  echo "\n--ENV--"
  cd $dir1
  git status -s
  echo "--SCHOOL--"
  cd $dir3 
  git status -s
  echo " -- deep_learning --"
  cd $dir2
  git status -s
  echo "--NOTES--"
  cd $dir4
  git status -s
  cd $A
}
boat_pull() {
  A=$(pwd)
  echo "\n--rosflight_holodeck--"
  cd ~/dev/boat_landing_sim/src/rosflight_holodeck
  git pull
  echo "\n--rosflight--"
  cd ../ROSFLIGHT_fork
  git pull
  echo "\n--rosflight_joy--"
  cd ../rf_joy 
  git pull
  echo "\n--roscopter--"
  cd ../roscopter
  git pull
  echo "\n--boat_landing_sim--"
  cd ../..
  git pull
  cd $A
  echo "\nboat_landing_sim repo has been updated on this machine.\n"
}

source ~/.other
